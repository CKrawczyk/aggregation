#!/usr/bin/env python
__author__ = 'ggdhines'
from transcription import Tate
import sys
from subprocess import call
import matplotlib.pyplot as plt
import matplotlib.cbook as cbook
import re
import yaml

latex_header = """
\documentclass[a4paper,10pt]{article}
%\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{color}
\usepackage[margin=0.25in]{geometry}
\usepackage{graphicx}
\\begin{document}


"""
from transcription import retired_subjects
retired_subjects = [655519, 655524, 655540, 655542, 655544, 655545, 655772, 655779, 655965, 656166, 656169, 656175, 656373, 656374, 656376, 656377, 656380, 656381, 656382, 656622, 656629, 656634, 656639, 656640, 656643, 656647, 656648, 656654, 656659, 656991, 657002, 657413, 657414, 657617, 657619, 657634, 657839, 657852, 658117, 658118, 658119, 658121, 658122, 658544, 658546, 658548, 658551, 659205, 659209, 659220, 659225, 659228, 659230, 659293, 660046, 660212, 660528, 660529, 660530, 660532, 660533, 660555, 660678, 660679, 660681, 660693, 660999, 661152, 661159, 661300, 661466, 661467, 661468, 661469, 661470, 661471, 661804, 661951, 661952, 661954, 661956, 661958, 661960, 662149, 662298, 662299, 662300, 662301, 662302, 662304, 662306, 662313, 662322, 662346, 662348, 662456, 662497, 662614, 662615, 662616, 662617, 662618, 662619, 662620, 662621, 662622, 662623, 662624, 662625, 662626, 662627, 662628, 662629, 662630, 662631, 662632, 662634, 662635, 662636, 662637, 662638, 662639, 662640, 662641, 662642, 662643, 662644, 662645, 662646, 662647, 662648, 662649, 662650, 662651, 662652, 662653, 662654, 662655, 662656, 662657, 662658, 662659, 662660, 662661, 662662, 662663, 662664, 662665, 662666, 662667, 662668, 662669, 662670, 662671, 662672, 662673, 662674, 662675, 662676, 662677, 662678, 662679, 662680, 662683, 662684, 662685, 662686, 662687, 662688, 662689, 662690, 662691, 662692, 662693, 662694, 662695, 662696, 662697, 662698, 662699, 662700, 662701, 662702, 662703, 662704, 662705, 662706, 662707, 662708, 662709, 662710, 662711, 662712, 662713, 662714, 662715, 662716, 662717, 662718, 662719, 662720, 662721, 662722, 662723, 662724, 662725, 662726, 662727, 662728, 662729, 662730, 662731, 662732, 662733, 662734, 662735, 662736, 662737, 662738, 662739, 662740, 662741, 662742, 662743, 662744, 662745, 662746, 662747, 662748, 662749, 662750, 662751, 662752, 662753, 662754, 662755, 662756, 662757, 662758, 662759, 662760, 662762, 662763, 662764, 662765, 662766, 662767, 662768, 662769, 662770, 662771, 662772, 662773, 662774, 662775, 662776, 662777, 662778, 662779, 662780, 662781, 662782, 662783, 662784, 662785, 662786, 662787, 662788, 662789, 662791, 662792, 662793, 662794, 662795, 662796, 662797, 662798, 662799, 662800, 662801, 662802, 662803, 662805, 662806, 662807, 662808, 662809, 662810, 662811, 662812, 662813, 662814, 662815, 662816, 662817, 662818, 662819, 662820, 662821, 662822, 662823, 662824, 662825, 662826, 662827, 662828, 662829, 662830, 662831, 662832, 662833, 662834, 662835, 662836, 662837, 662838, 662839, 662840, 662841, 662842, 662843, 662844, 662845, 662846, 662847, 662848, 662849, 662850, 662851, 662852, 662853, 662854, 662855, 662856, 662857, 662858, 662859, 662860, 662861, 662862, 662863, 662864, 662865, 662866, 662867, 662868, 662869, 662870, 662871, 662872, 662873, 662874, 662875, 662876, 662877, 662878, 662879, 662880, 662881, 662882, 662883, 662884, 662885, 662886, 662887, 662888, 662889, 662890, 662891, 662892, 662893, 662894, 662895, 662896, 662897, 662898, 662899, 662900, 662901, 662902, 662903, 662904, 662905, 662906, 662907, 662908, 662909, 662910, 662911, 662912, 662913, 662914, 662915, 662916, 662917, 662918, 662919, 662920, 662921, 662922, 662923, 662924, 662925, 662926, 662927, 662928, 662929, 662930, 662931, 662932, 662933, 662934, 662935, 662936, 662937, 662938, 662939, 662940, 662941, 662942, 662944, 662945, 662946, 662947, 662953, 662954, 662955, 662956, 662957, 662958, 662959, 662960, 662961, 662962, 662963, 662964, 662965, 662966, 662967, 662968, 662969, 662970, 662972, 662973, 662974, 662975, 662976, 662977, 662978, 662979, 662980, 662981, 662982, 662983, 662984, 662985, 662986, 662987, 662988, 662989, 662990, 662991, 662992, 662993, 662994, 662995, 662996, 662997, 662998, 662999, 663000, 663001, 663002, 663003, 663004, 663005, 663006, 663007, 663008, 663009, 663010, 663011, 663012, 663013, 663014, 663015, 663016, 663017, 663018, 663019, 663020, 663021, 663022, 663023, 663024, 663025, 663026, 663027, 663029, 663030, 663031, 663032, 663033, 663034, 663035, 663036, 663037, 663038, 663039, 663040, 663041, 663042, 663043, 663044, 663045, 663046, 663047, 663048, 663049, 663050, 663051, 663052, 663053, 663054, 663055, 663056, 663057, 663058, 663059, 663060, 663061, 663062, 663063, 663064, 663065, 663066, 663067, 663068, 663069, 663070, 663071, 663072, 663073, 663074, 663075, 663076, 663077, 663078, 663079, 663080, 663081, 663082, 663083, 663084, 663085, 663086, 663087, 663088, 663089, 663090, 663091, 663092, 663093, 663094, 663095, 663096, 663097, 663098, 663099, 663100, 663101, 663102, 663103, 663104, 663105, 663106, 663107, 663108, 663109, 663110, 663111, 663112, 663113, 663114, 663115, 663116, 663117, 663118, 663119, 663120, 663121, 663122, 663123, 663124, 663125, 663126, 663127, 663128, 663129, 663130, 663131, 663132, 663133, 663134, 663135, 663136, 663137, 663138, 663139, 663140, 663141, 663142, 663143, 663144, 663145, 663146, 663147, 663148, 663149, 663150, 663151, 663152, 663153, 663154, 663155, 663156, 663157, 663158, 663159, 663161, 663162, 663163, 663164, 663165, 663166, 663167, 663168, 663169, 663170, 663171, 663172, 663173, 663174, 663175, 663176, 663177, 663178, 663179, 663180, 663181, 663182, 663183, 663184, 663185, 663186, 663187, 663188, 663189, 663190, 663191, 663192, 663193, 663194, 663195, 663196, 663197, 663198, 663199, 663200, 663201, 663202, 663203, 663204, 663205, 663206, 663207, 663208, 663209, 663210, 663211, 663212, 663213, 663214, 663215, 663216, 663217, 663218, 663219, 663220, 663221, 663222, 663223, 663224, 663225, 663226, 663227, 663228, 663229, 663230, 663231, 663232, 663233, 663234, 663235, 663236, 663237, 663238, 663239, 663240, 663241, 663242, 663243, 663244, 663245, 663246, 663247, 663248, 663249, 663250, 663251, 663253, 663255, 663256, 663257, 663258, 663259, 663260, 663261, 663262, 663263, 663265, 663266, 663267, 663268, 663270, 663271, 663272, 663273, 663275, 663277, 663279, 663280, 663281, 663282, 663283, 663284, 663285, 663286, 663287, 663288, 663289, 663292, 663294, 663296, 663298, 663300, 663302, 663303, 663307, 663323, 663325, 663328, 663329, 663330, 663331, 663332, 663334, 663337, 663338, 663340, 663358, 663371, 663387, 663425, 663464, 663465, 663508, 663509, 663510, 663512, 663514, 663517, 663520, 663521, 663705, 663706, 663707, 663708, 663709, 663710, 663711, 663712, 663713, 663714, 663715, 663716, 663718, 663719, 663720, 663721, 663722, 663724, 663725, 663726, 663727, 663728, 663729, 663754, 663759, 663778, 663813, 663843, 663847, 663854, 663855, 663856, 663904, 663937, 663938, 663939, 663942, 663943, 663944, 663945, 663946, 663947, 663949, 663961, 663963, 663991, 663993, 664083, 664084, 664085, 664086, 664087, 664088, 664089, 664091, 664092, 664093, 664094, 664158, 664181, 664185, 664201, 664205, 664261, 664263, 664267, 664269, 664271, 664302, 664303, 664305, 664307, 664308, 664309, 664310, 664311, 664313, 664315, 664316, 664317, 664318, 664319, 664321, 664323, 664325, 664326, 664327, 664328, 664329, 664331, 664332, 664333, 664334, 664335, 664336, 664337, 664338, 664339, 664340, 664341, 664342, 664343, 664344, 664345, 664346, 664348, 664349, 664350, 664353, 664354, 664356, 664359, 664361, 664364, 664365, 664368, 664371, 664372, 664381, 664385, 664389, 664390, 664391, 664392, 664393, 664394, 664395, 664397, 664398, 664399, 664401, 664402, 664403, 664404, 664406, 664407, 664408, 664409, 664410, 664411, 664412, 664413, 664415, 664416, 664418, 664419, 664420, 664422, 664423, 664424, 664425, 664427, 664428, 664429, 664431, 664433, 664434, 664436, 664437, 664440, 664441, 664442, 664443, 664444, 664445, 664446, 664448, 664449, 664450, 664451, 664454, 664455, 664456, 664457, 664461, 664463, 664465, 664466, 664467, 664468, 664470, 664472, 664474, 664476, 664478, 664480, 664482, 664484, 664486, 664488, 664490, 664492, 664494, 664502, 664504, 664506, 664510, 664522, 664526, 664529, 664531, 664539, 664555, 664568, 664571, 664576, 664588, 664598, 664599, 664612, 664621, 664902, 665017, 665204, 665286, 665293, 665298, 665347, 665348, 665358, 665432, 665433, 665435, 665437, 665438, 665495, 665496, 665497, 665498, 665499, 665500, 665501, 665502, 665503, 665504, 665505, 665506, 665507, 665508, 665512, 665513, 665514, 665515, 665516, 665517, 665518, 665519, 665525, 665526, 665536, 665537, 665538, 665539, 665540, 665541, 665542, 665543, 665544, 665545, 665546, 665547, 665548, 665549, 665550, 665551, 665552, 665553, 665554, 665555, 665556, 665557, 665558, 665559, 665560, 665561, 665562, 665563, 665564, 665565, 665566, 665567, 665568, 665569, 665570, 665571, 665572, 665574, 665575, 665576, 665577, 665578, 665579, 665580, 665581, 665582, 665583, 665584, 665626, 665627, 665628, 665629, 665630, 665631, 665632, 665633, 665634, 665635, 665636, 665637, 665638, 665639, 665640, 665641, 665642, 665643, 665644, 665645, 665781, 665911, 665912, 665914, 665916, 665924, 665926, 665938, 665946, 665970, 665976, 665986, 665990, 666120, 666124, 666128, 666132, 666134, 666136, 666138, 666140, 666224, 666226, 666361, 666453, 666456, 666470, 666478, 666490, 666494, 666500, 666502, 666512, 666567, 666609, 666613, 666618, 666622, 666624, 666630, 666636, 666639, 666640, 666642, 666644, 666646, 666650, 666651, 666654, 666658, 666678, 666688, 666691, 666706, 666746, 667023, 667024, 667028, 667034, 667236, 667238, 667240, 667242, 667244, 667246, 667248, 667250, 667252, 667254, 667256, 667258, 667262, 667264, 667266, 667268, 667274, 667278, 667280, 667282, 667288, 667290, 667297, 667302, 667303, 667304, 667307, 667309, 667311, 667312, 667313, 667315, 667316, 667317, 667319, 667321, 667323, 667325, 667327, 667328, 667329, 667330, 667331, 667333, 667335, 667337, 667341, 667343, 667345, 667346, 667353, 667354, 667506, 667507, 667509, 667511, 667513, 667515, 667517, 667535, 667545, 667557, 667590, 667592, 667594, 667598, 667648, 667652, 667654, 667662, 667664, 667668, 667672, 667744, 667748, 667750, 667752, 667756, 667760, 667762, 667764, 667774, 667784, 667792, 667794, 667872, 667878, 667953, 667967, 667973, 667975, 668120, 668122, 668126, 668140, 668142, 668199, 668200, 668202, 668204, 668206, 668208, 668210, 668214, 668216, 668218, 668220, 668224, 668268, 668338, 668342, 668505, 668508, 668512, 668515, 668516, 668517, 668518, 668522, 668524, 668526, 668528, 668538, 668546, 668552, 668558, 668562, 668565, 668610, 668616, 668626, 668628, 668630, 668632, 668670, 668768, 668770, 668772, 603260, 603261, 603262, 603263, 603264, 603265, 603266, 603267, 603268, 603269, 603270, 603271, 603272, 603274, 603275, 603277, 603279, 603280, 603281, 603283, 603284, 603285, 603286, 603287, 603288, 603289, 603290, 603291, 603292, 603293, 603294, 603295, 603296, 603297, 603299, 603301, 603302, 603303, 603304, 603305, 668930, 669092, 669101, 669102, 669106, 669124, 669354, 669356, 669523, 669526, 669528, 669752, 669753, 669755, 669758, 669760, 669763, 669766, 669769, 669772, 669777, 669780, 669782, 669786, 669793, 669798, 669801, 669819, 669821, 669824, 669827, 669832, 669840, 669843, 669852, 669864, 669866, 669914, 669915, 669917, 669918, 669920, 669922, 669923, 669925, 669926, 669927, 669929, 669930, 669932, 669933, 669934, 669936, 669937, 669939, 669940, 669942, 669943, 669944, 669946, 669947, 669948, 669950, 669951, 669953, 669954, 669955, 669957, 669959, 669960, 669962, 669963, 669965, 669966, 669968, 669971, 669972, 669973, 669975, 669976, 669978, 669979, 669981, 669982, 669984, 669985, 669987, 669989, 669991, 669992, 669994, 669995, 669997, 669998, 669999, 670002, 670004, 670005, 670006, 670008, 670009, 670010, 670012, 670013, 670026, 670030, 670031, 670033, 670034, 670036, 670037, 670039, 670040, 670041, 670043, 670044, 670046, 670047, 670051, 670052, 670059, 670062, 670065, 670081, 670085, 670086, 670088, 670090, 670092, 670093, 670094, 670097, 670104, 670110, 670115, 670118, 670127, 670128, 670130, 670131, 670132, 670134, 670137, 670138, 670139, 670142, 670146, 670155, 670162, 670192, 670253, 670316, 670318, 670321, 670354, 670389, 670393, 603273, 603276, 603278, 603282, 603298, 670691, 670693, 670694, 670696, 670698, 670700, 670702, 670704, 670708, 670709, 670711, 670712, 670713, 670715, 670718, 670719, 670725, 670730, 670979, 670980, 670982, 670983, 670985, 670986, 670988, 670989, 670990, 670992, 670993, 670995, 670996, 670998, 670999, 671001, 671002, 671004, 671007, 671008, 671010, 671011, 671013, 671014, 671016, 671017, 671019, 671021, 671022, 671024, 671026, 671027, 671028, 671030, 671031, 671033, 671034, 671037, 671039, 671040, 671042, 671043, 671045, 671047, 671048, 671050, 671052, 671053, 671055, 671056, 671058, 671059, 671061, 671062, 671064, 671066, 671067, 671068, 671070, 671072, 671075, 671076, 671078, 671079, 671081, 671083, 671085, 671086, 671088, 671089, 671091, 671093, 671094, 671096, 671097, 671099, 671101, 671102, 671104, 671106, 671107, 671109, 671110, 671112, 671113, 671115, 671117, 671118, 671121, 671123, 671125, 671126, 671128, 671131, 671137, 671138, 671140, 671141, 671143, 671145, 671146, 671148, 671150, 671151, 671153, 671154, 671156, 671158, 671159, 671161, 671163, 671164, 671166, 671168, 671170, 671171, 671173, 671174, 671176, 671178, 671179, 671181, 671183, 671184, 671186, 671188, 671189, 671191, 671192, 671194, 671195, 671197, 671198, 671200, 671202, 671203, 671204, 671206, 671208, 671209, 671211, 671212, 671214, 671215, 671217, 671219, 671220, 671222, 671223, 671225, 671226, 671227, 671229, 671230, 671232, 671234, 671235, 671237, 671239, 671240, 671242, 671244, 671245, 671247, 671249, 671250, 671252, 671255, 671256, 671258, 671261, 671263, 671264, 671266, 671267, 671269, 671271, 671272, 671274, 671275, 671277, 671279, 671280, 671282, 671284, 671285, 671287, 671289, 671291, 671292, 671294, 671296, 671297, 671299, 671300, 671303, 671305, 671307, 671309, 671310, 671312, 671314, 671315, 671317, 671318, 671320, 671322, 671323, 671325, 671327, 671328, 671330, 671332, 671333, 671335, 671336, 671338, 671339, 671341, 671345, 671347, 671348, 671359, 671365, 671366, 671367, 671369, 671378, 671381, 671382, 671384, 671385, 671387, 671389, 671390, 671392, 671393, 671396, 671399, 671401, 671405, 671406, 671417, 671419, 671420, 671422, 671426, 671439, 671440, 671442, 671443, 671445, 671447, 671449, 671450, 671452, 671453, 671455, 671456, 671458, 671459, 671461, 671462, 671464, 671465, 671467, 671469, 671471, 671472, 671474, 671476, 671477, 671479, 671484, 671487, 671488, 671491, 671504, 671506, 671507, 671509, 671510, 671512, 671513, 671515, 671517, 671518, 671520, 671521, 671523, 671525, 671527, 671529, 671531, 671532, 671534, 671536, 671538, 671539, 671540, 671541, 671542, 671543, 671544, 671545, 671546, 671547, 671548, 671549, 671550, 671551, 671552, 671553, 671554, 671555, 671556, 671557, 671558, 671559, 671560, 671561, 671562, 671563, 671564, 671565, 671566, 671567, 671568, 671569, 671570, 671571, 671572, 671573, 671574, 671575, 671576, 671577, 671578, 671579, 671580, 671581, 671582, 671583, 671584, 671585, 671586, 671587, 671588, 671589, 671591, 671592, 671593, 671594, 671595, 671596, 671598, 671599, 671600, 671601, 671602, 671603, 671604, 671605, 671606, 671607, 671608, 671609, 671610, 671611, 671612, 671613, 671614, 671615, 671616, 671617, 671618, 671619, 671620, 671621, 671622, 671623, 671624, 671625, 671626, 671627, 671628, 671629, 671630, 671631, 671632, 671633, 671634, 671635, 671636, 671637, 671638, 671639, 671640, 671641, 671642, 671643, 671644, 671645, 671646, 671647, 671648, 671649, 671650, 671651, 671652, 671653, 671654, 671655, 671656, 671657, 671658, 671659, 671660, 671661, 671663, 671664, 671665, 671666, 671667, 671668, 671669, 671670, 671671, 671673, 671675, 671676, 671677, 671678, 671679, 671680, 671681, 671682, 671683, 671684, 671685, 671686, 671687, 671688, 671689, 671690, 671691, 671692, 671693, 671694, 671695, 671696, 671697, 671698, 671699, 671700, 671701, 671702, 671703, 671704, 671705, 671706, 671707, 671708, 671709, 671710, 671711, 671712, 671713, 671714, 671715, 671716, 671717, 671718, 671719, 671720, 671721, 671722, 671723, 671724, 671725, 671726, 671727, 671728, 671729, 671730, 671731, 671732, 671734, 671735, 671736, 671737, 671738, 671739, 671740, 671741, 671742, 671743, 671744, 671745, 671746, 671747, 671748, 671749, 671750, 671751, 671752, 671753, 671754, 671755, 671756, 671757, 671758, 671759, 671760, 671761, 671762, 671763, 671764, 671765, 671766, 671767, 671768, 671769, 671770, 671771, 671772, 671773, 671774, 671775, 671776, 671777, 671778, 671779, 671780, 671781, 671782, 671783, 671784, 671785, 671786, 671787, 671788, 671789, 671790, 671791, 671792, 671793, 671794, 671795, 671796, 671797, 671798, 671799, 671800, 671801, 671802, 671803, 671804, 671805, 671806, 671807, 671809, 671810, 671811, 671812, 671813, 671903, 671904, 671905, 671906, 671907, 671908, 671909, 671910, 671911, 671912, 671913, 671914, 671915, 671916, 671917, 671918, 671919, 671920, 671921, 671922, 671923, 671924, 671925, 671926, 671927, 671928, 671929, 671930, 671931, 671932, 671934, 671935, 671936, 671937, 671938, 671939, 671940, 671941, 671942, 671943, 671944, 671945, 671946, 671947, 671948, 671949, 671952, 671953, 671955, 671956, 671975, 671976, 671977, 671979, 671980, 671981, 671982, 671985, 671986, 671988, 671989, 671992, 671994, 671998, 672000, 672005, 672019, 672023, 672053, 672080, 672082, 672084, 672087, 672090, 672092, 672094, 672096, 672103, 672105, 672107, 672109, 672111, 672113, 672135, 672157, 672160, 672165, 672167, 672169, 672173, 672174, 672177, 672178, 672180, 672181, 672183, 672185, 672186, 672187, 672188, 672189, 672190, 672197, 672203, 672241, 672279, 672280, 672281, 672282, 672283, 672284, 672285, 672286, 672289, 672290, 672291, 672292, 672293, 672294, 672295, 672296, 672297, 672298, 672299, 672300, 672301, 672302, 672303, 672304, 672305, 672306, 672307, 672308, 672309, 672310, 672311, 672312, 672313, 672314, 672315, 672316, 672317, 672318, 672319, 672320, 672321, 672325, 672326, 672327, 672330, 672339, 672340, 672341, 672342, 672343, 672344, 672346, 672347, 672348, 672349, 672350, 672351, 672352, 672353, 672354, 672355, 672356, 672357, 672358, 672359, 672360, 672361, 672362, 672363, 672364, 672365, 672366, 672367, 672368, 672369, 672370, 672373, 672378, 672379, 672380, 672381, 672382, 672383, 672384, 672385, 672386, 672388, 672389, 672390, 672391, 672392, 672393, 672394, 672402, 672403, 672404, 672405, 672406, 672407, 672408, 672409, 672413, 672414, 672415, 672416, 672417, 672418, 672419, 672420, 672421, 672422, 672423, 672424, 672425, 672426, 672427, 672428, 672429, 672430, 672432, 672433, 672434, 672435, 672436, 672437, 672439, 672440, 672441, 672442, 672443, 672444, 672445, 672446, 672447, 672448, 672449, 672450, 672451, 672452, 672454, 672455, 672456, 672457, 672458, 672459, 672460, 672461, 672462, 672463, 672464, 672465, 672466, 672467, 672468, 672469, 672470, 672471, 672472, 672473, 672474, 672475, 672476, 672477, 672478, 672479, 672480, 672484, 672485, 672486, 672487, 672488, 672489, 672490, 672498, 672499, 672500, 672501, 672502, 672503, 672504, 672505, 672506, 672507, 672508, 672509, 672512, 672514, 672515, 672516, 672517, 672518, 672520, 672521, 672522, 672523, 672524, 672525, 672526, 672527, 672528, 672529, 672530, 672531, 672532, 672533, 672534, 672535, 672536, 672538, 672539, 672540, 672541, 672542, 672543, 672544, 672545, 672546, 672547, 672548, 672549, 672550, 672551, 672552, 672553, 672554, 672555, 672556, 672557, 672558, 672559, 672560, 672561, 672562, 672563, 672564, 672565, 672566, 672567, 672568, 672569, 672570, 672571, 672572, 672573, 672574, 672575, 672576, 672577, 672578, 672579, 672580, 672581, 672582, 672583, 672584, 672585, 672586, 672587, 672588, 672589, 672590, 672591, 672592, 672593, 672594, 672595, 672596, 672597, 672598, 672599, 672600, 672601, 672602, 672603, 672604, 672605, 672606, 672607, 672608, 672609, 672610, 672611, 672612, 672613, 672614, 672615, 672616, 672617, 672618, 672620, 672622, 672623, 672624, 672625, 672626, 672627, 672628, 672629, 672630, 672631, 672632, 672633, 672634, 672635, 672636, 672637, 672638, 672640, 672641, 672642, 672644, 672645, 672646, 672647, 672648, 672649, 672650, 672651, 672652, 672653, 672654, 672655, 672656, 672657, 672658, 672659, 672660, 672661, 672662, 672663, 672664, 672665, 672666, 672667, 672668, 672669, 672670, 672671, 672672, 672673, 672674, 672675, 672676, 672677, 672678, 672679, 672680, 672681, 672682, 672683, 672684, 672685, 672686, 672687, 672688, 672689, 672690, 672691, 672692, 672694, 672695, 672696, 672697, 672698, 672699, 672701, 672702, 672703, 672704, 672705, 672706, 672707, 672708, 672709, 672710, 672711, 672712, 672713, 672714, 672715, 672716, 672717, 672718, 672719, 672720, 672721, 672722, 672723, 672724, 672725, 672726, 672727, 672728, 672729, 672730, 672731, 672732, 672733, 672734, 672735, 672736, 672737, 672738, 672739, 672740, 672741, 672742, 672743, 672744, 672745, 672746, 672747, 672748, 672749, 672750, 672751, 672752, 672753, 672754, 672755, 672756, 672757, 672758, 672759, 672760, 672761, 672762, 672763, 672764, 672765, 672766, 672767, 672768, 672769, 672770, 672771, 672772, 672773, 672774, 672775, 672776, 672777, 672778, 672779, 672780, 672781, 672782, 672783, 672784, 672785, 672786, 672787, 672788, 672789, 672790, 672791, 672792, 672793, 672794, 672795, 672796, 672797, 672798, 672799, 672800, 672801, 672802, 672803, 672804, 672805, 672806, 672807, 672808, 672809, 672810, 672811, 672812, 672813, 672814, 672815, 672816, 672817, 672818, 672819, 672820, 672821, 672822, 672823, 672824, 672825, 672826, 672827, 672828, 672829, 672830, 672831, 672832, 672833, 672834, 672835, 672836, 672837, 672838, 672839, 672840, 672841, 672842, 672843, 672844, 672845, 672846, 672847, 672852, 672853, 672854, 672855, 672856, 672857, 672858, 672859, 672860, 672861, 672862, 672863, 672864, 672865, 672866, 672867, 672868, 672869, 672870, 672871, 672872, 672873, 672874, 672875, 672876, 672877, 672878, 672879, 672880, 672881, 672882, 672883, 672884, 672885, 672886, 672887, 672888, 672889, 672890, 672891, 672892, 672893, 672894, 672895, 672896, 672897, 672898, 672899, 672901, 672902, 672904, 672905, 672906, 672907, 672908, 672909, 672910, 672913, 672914, 672915, 672916, 672917, 672918, 672919, 672921, 672925, 672926, 672927, 672928, 672929, 672930, 672931, 672933, 672942, 672952, 672953, 672954, 672955, 672956, 672957, 672958, 672959, 672960, 672963, 672964, 672965, 672966, 672967, 672968, 672969, 672970, 672971, 672972, 672973, 672974, 672975, 672976, 672977, 672978, 672979, 672980, 672981, 672982, 672989, 672991, 672998, 673004, 673027, 673179, 673202, 673205, 673361, 673363, 673364, 673365, 673366, 673415, 673481, 673482, 673484, 673485, 673486, 673488, 673490, 673492, 673493, 673494, 673496, 673497, 673498, 673500, 673502, 673504, 673505, 673519, 673520, 673522, 673526, 673528, 673529, 673530, 673538, 673540, 673546, 673554, 673560, 673561, 673565, 673566, 673570, 673590, 673591, 673594, 673596, 673598, 673600, 673602, 673604, 673606, 673608, 673610, 673614, 673616, 673620, 673654, 673665, 673666, 673668, 673669, 673670, 673672, 673673, 673683, 673688, 673689, 673691, 673692, 673693, 673697, 673701, 673712, 673713, 673717, 673721, 673734, 649198, 649200, 649201, 649202, 649203, 649204, 649205, 649206, 649207, 649208, 649209, 649210, 649211, 649212, 649213, 649214, 649226, 649227, 649228, 649229, 649230, 649231, 649232, 649233, 649234, 649235, 649236, 649237, 649238, 649239, 649240, 649241, 649242, 649243, 649244, 649245, 649246, 649247, 649248, 649249, 649250, 649251, 649252, 649253, 649254, 649255, 649256, 649257, 649258, 649259, 649261, 649262, 649263, 649265, 649266, 649267, 649268, 649269, 649270, 649272, 649274, 649276, 649277, 649278, 649279, 649280, 649281, 649282, 649283, 649284, 649285, 649287, 649288, 649362, 649363, 649364, 649365, 649366, 649367, 649368, 649369, 649370, 649371, 649372, 649373, 649374, 649375, 649376, 649377, 649378, 649379, 649380, 649381, 649382, 649383, 649384, 649385, 649386, 649387, 649388, 649390, 649391, 649393, 649394, 649396, 649397, 649398, 649400, 649401, 649405, 649407, 649408, 649409, 649411, 649413, 649415, 649416, 649418, 649420, 649421, 649422, 649425, 649426, 649427, 649429, 649430, 649431, 649432, 649433, 649434, 649438, 649441, 649452, 649456, 649460, 649462, 649463, 649464, 649465, 649466, 649467, 649468, 649469, 649470, 649471, 649472, 649473, 649474, 649475, 649476, 649477, 649478, 649479, 649480, 649481, 649482, 649483, 649484, 649485, 649486, 649487, 649488, 649489, 649490, 649491, 649492, 649493, 649495, 649496, 649497, 649498, 649500, 649504, 649505, 649506, 649507, 649508, 649509, 649510, 649511, 649512, 649513, 649514, 649515, 649516, 649517, 649518, 649539, 649548, 649549, 649553, 649555, 649556, 649557, 649558, 649559, 649560, 649561, 649562, 649563, 649565, 649566, 649567, 649568, 649569, 649570, 649571, 649572, 649573, 649574, 649575, 649576, 649578, 649579, 649580, 649581, 649582, 649585, 649587, 649589, 649591, 649592, 649594, 649596, 649597, 649599, 649603, 649604, 649606, 649608, 649609, 649612, 649614, 649615, 649617, 649619, 649622, 649624, 649626, 649627, 649629, 649631, 649632, 649634, 649636, 649638, 649639, 649640, 649642, 649644, 649645, 649647, 649650, 649652, 649653, 649655, 649656, 649658, 649659, 649661, 649663, 649664, 649666, 649668, 649670, 649671, 649673, 649675, 649676, 649678, 649679, 649681, 649683, 649685, 649686, 649688, 649689, 649690, 649691, 649692, 649693, 649695, 649697, 649698, 649700, 649702, 649704, 649705, 649708, 649710, 649712, 649713, 649715, 649718, 649720, 649721, 649723, 649725, 649726, 649728, 649733, 649737, 649738, 649740, 649742, 649744, 649745, 649747, 649748, 649750, 649752, 649753, 649755, 649757, 649758, 649760, 649761, 649763, 649765, 649766, 649768, 649770, 649772, 649774, 649775, 649777, 649778, 649780, 649781, 649783, 649785, 649787, 649790, 649791, 649793, 649795, 649797, 649800, 649802, 649804, 649806, 649807, 649809, 649811, 649813, 649815, 649816, 649818, 649820, 649822, 649823, 649825, 649827, 649828, 649831, 649832, 649834, 649836, 649838, 649839, 649841, 649843, 649845, 649847, 649848, 649850, 649853, 649855, 649857, 649860, 649862, 649866, 649867, 649869, 649871, 649875, 649876, 649878, 649880, 649882, 649883, 649885, 649887, 649889, 649890, 649892, 649894, 649896, 649898, 649902, 649903, 649905, 649907, 649909, 649911, 649912, 649916, 649918, 649920, 649922, 649925, 649927, 649929, 649930, 649932, 649933, 649936, 649937, 649939, 649940, 649942, 649944, 649948, 649950, 649952, 649953, 649955, 649957, 649959, 649961, 649962, 649964, 649966, 649968, 649969, 649973, 649976, 649978, 649979, 649981, 649983, 649985, 649986, 649988, 649990, 649992, 649993, 649995, 649997, 649999, 650001, 650002, 650004, 650006, 650008, 650010, 650011, 650013, 650015, 650017, 650020, 650022, 650023, 650027, 650028, 650030, 650031, 650033, 650035, 650036, 650039, 650041, 650043, 650054, 650055, 650060, 650063, 650065, 650066, 650071, 650078, 650079, 650093, 650107, 650109, 650110, 650112, 650113, 650115, 650117, 650118, 650120, 650121, 650123, 650136, 650139, 650147, 650152, 650166, 650185, 650210, 650212, 650214, 650215, 650217, 650219, 650220, 650222, 650223, 650225, 650227, 650228, 650232, 650235, 650238, 650240, 650241, 650243, 650244, 650245, 650247, 650248, 650256, 650258, 650259, 650261, 650263, 650264, 650266, 650268, 650270, 650271, 650273, 650275, 650276, 650278, 650281, 650284, 650285, 650331, 650333, 650334, 650337, 650339, 650341, 650342, 650344, 650347, 650350, 650380, 650382, 650383, 650385, 650389, 650393, 650394, 650395, 650398, 650403, 650405, 650407, 650409, 650411, 650413, 650414, 650416, 650418, 650420, 650433, 650435, 650438, 650440, 650445, 650446, 650457, 650474, 650533, 650537, 650538, 650540, 650541, 650543, 650544, 650546, 650548, 650551, 650559, 650561, 650562, 650564, 650565, 650569, 650572, 650573, 650575, 650577, 650586, 650587, 650589, 650590, 650592, 650595, 650596, 650598, 650600, 650601, 650604, 650606, 650608, 650611, 650614, 650615, 650617, 650619, 650625, 650626, 650628, 650629, 650631, 650634, 650636, 650637, 650639, 650640, 650644, 650645, 650647, 650687, 650688, 650690, 650692, 650693, 650695, 650700, 650701, 650702, 650706, 650707, 650709, 650715, 650733, 650735, 650738, 650752, 650759, 650762, 650764, 650765, 650770, 650797, 650799, 650801, 650802, 650804, 650806, 650807, 650811, 650814, 650815, 650817, 650819, 650823, 650833, 650857, 650858, 650863, 650868, 650895, 650897, 650899, 650900, 650902, 650903, 650905, 650907, 650908, 650911, 650913, 650924, 650927, 650930, 650936, 650938, 650941, 650946, 650947, 650957, 650958, 650960, 650962, 650966, 650974, 650979, 650983, 650986, 650995, 651006, 651039, 651041, 651042, 651044, 651045, 651054, 651059, 651185, 651188, 651192, 651193, 651195, 651197, 651198, 651200, 651201, 651205, 651211, 651232, 651233, 651235, 651238, 651285, 651288, 651289, 651296, 651298, 651300, 651315, 651392, 651589, 651593, 651597, 651598, 651601, 651603, 651606, 651611, 651615, 651631, 651666, 651671, 651791, 651920, 651922, 652012, 652342, 652344, 652346, 652347, 652349, 652351, 652352, 652374, 652383, 652523, 652524, 652810, 652813, 652815, 652818, 652821, 652827, 652837, 652909, 652968, 653002, 653004, 653005, 653007, 653009, 653010, 653011, 653013, 653015, 653016, 653027, 653032, 653036, 653045, 653048, 653051, 653053, 653054, 653062, 653066, 653068, 653070, 653072, 653074, 653075, 653078, 653082, 653083, 653085, 653088, 653089, 653091, 653092, 653094, 653095, 653097, 653100, 653101, 653103, 653106, 653107, 653109, 653113, 653114, 653116, 653118, 653120, 653122, 653123, 653126, 653149, 653151, 653152, 653154, 653155, 653157, 653159, 653160, 653162, 653163, 653165, 653169, 653196, 653199, 653233, 653234, 653235, 653237, 653239, 653240, 653242, 653243, 653245, 653246, 653248, 653250, 653251, 653253, 653254, 653256, 653259, 653260, 653262, 653264, 653265, 653266, 653268, 653270, 653276, 653278, 653281, 653285, 653286, 653288, 653291, 653292, 653294, 653298, 653301, 653304, 653307, 653310, 653315, 653316, 653318, 653320, 653322, 653324, 653326, 653328, 653330, 653332, 653334, 653338, 653341, 653342, 653344, 653348, 653351, 653352, 653354, 653355, 653356, 653358, 653360, 653363, 653364, 653365, 653366, 653368, 653369, 653370, 653372, 653373, 653374, 653376, 653377, 653379, 653380, 653381, 653383, 653384, 653385, 653388, 653391, 653392, 653394, 653395, 653396, 653398, 653403, 653625, 654041, 654044, 654046, 654047, 654049, 654051, 654054, 654245, 654478, 654490, 654639, 654640, 654877, 654880, 654885, 654888, 655073, 655076, 655080, 655081, 655084, 655087, 655091, 655319]

def get_updated_tags(project_id):
    replacement_tags = {}
    param_file = open("/app/config/aggregation.yml","rb")
    param_details = yaml.load(param_file)

    if (project_id not in param_details) or ("tags" not in param_details[project_id]):
        print "could not find any tag info in the yml file"
        assert False

    with open(param_details[project_id]["tags"],"rb") as f:
        for old_tag in f.readlines():
            old_tag = old_tag.strip()
            print old_tag
            assert isinstance(old_tag,str)
            # old_tag = old_tag[:-1]
            if old_tag == "":
                break
            new_tag = old_tag.replace("sw-","")
            new_tag = new_tag.replace(".*","")

            # this is for annotate
            new_tag = new_tag.replace("\\","")
            # new_tag = new_tag.replace("\]","]")
            replacement_tags[old_tag] = new_tag
            print "^^" +new_tag
            print "==--"

    return replacement_tags

project_id = 245

folger_tags = {}#get_updated_tags(376)


for old_tag,new_tag in folger_tags.items():
    folger_tags[old_tag] = "{\color{blue}" + new_tag + "}"

def coloured_string(text):
    if "and battles" in text:
        print text
        a = True
    else:
        a = False
    old_text = text

    text = re.sub("<unclear>[.][*]</unclear>","{\color{blue}<unclear></unclear>}",text)

    # intermediate_dict = {}
    # second_intermediate_dict = {}
    # for ii,(tag,new_tag) in enumerate(folger_tags.items()):
    #     intermediate_dict[tag] = 200+ii
    #     second_intermediate_dict[200+ii] = new_tag

    # for tag,ii in intermediate_dict.items():
    #     text = re.sub(tag,chr(ii),text)
    #
    # intermediate_text = text
    #
    # for ii,new_tag in second_intermediate_dict.items():
    #     text = re.sub(chr(ii),new_tag,text)
    for tag,new_tag in sorted(folger_tags.items(), key = lambda x:len(x[0]),reverse=True):
        # text = re.sub(tag,new_tag,text)
        text = text.replace(tag,new_tag)

    if text.count("blue") > 5:
        print old_text
        # print intermediate_text
        print text
        assert False

    if a:
        print text
        print
    return text
import random

environment = "development"
if __name__ == "__main__":
    folger_tags = get_updated_tags(245)

    # print folger_tags
    # assert False
    # assert False
    with open("/tmp/transcription.tex","w") as f:
        f.write(latex_header)

        with Tate(project_id,environment) as project:
            # for count,(subject_id,aggregations) in enumerate(project.__yield_aggregations__(121,s)):
            for subject_id in [671541]:
                aggregations = list(project.__yield_aggregations__(121,subject_id))
                if aggregations == []:
                    continue
                aggregations = aggregations[0][1]
                print subject_id

                metadata = project.__get_subject_metadata__(subject_id)["subjects"][0]["metadata"]
                if "file name" in metadata:
                    fname = metadata["file name"]
                else:
                    fname = "subject id " + str(subject_id)

                lines = {}
                individual_lines = {}

                empty = True

                num_users = []

                individual_pts = []

                # print aggregations

                for key,line in aggregations["T2"]["text clusters"].items():
                    if key in ["all_users","param"]:
                        continue

                    num_users.append(line["num users"])

                    x1,x2,y1,y2,text = line["center"]
                    # plt.plot([x1,x2],[y1,y2],"-",color="red",linewidth=0.5)
                    lines[(x1,x2,y1,y2)] = text

                    pt_list,text_list = zip(*line["cluster members"])
                    individual_pts.extend(pt_list)
                    individual_lines[(x1,x2,y1,y2)] = text_list

                    empty = False

                line_items = lines.items()
                line_items.sort(key= lambda x:x[0][2])

                # if empty:
                #     plt.close()

                if not empty:
                    fig = plt.figure()
                    axes = fig.add_subplot(1, 1, 1)
                    #
                    image_fname = project.__image_setup__(subject_id)

                    image_file = cbook.get_sample_data(image_fname)
                    image = plt.imread(image_file)
                    # fig, ax = plt.subplots()
                    im = axes.imshow(image)
                    plt.axis('off')


                    f.write("\section{"+str(fname)+"}\n")
                    f.write("\\begin{figure}[t]\centering \includegraphics[scale=1]{/tmp/"+str(subject_id)+".pdf} \end{figure}")

                    for pts,l in line_items:
                        # print l
                        # print [ord(c) for c in l]
                        cumulative_c = ""

                        l = l.replace("$","\$")
                        l = l.replace("\\","\\textbackslash")
                        # l = l.replace("[","\[")
                        # l = l.replace("]","\]")
                        for c in l:
                            if c == "&":
                                f.write(coloured_string(cumulative_c)+"\&")
                                cumulative_c = ""
                            elif ord(c) not in [24,27]:
                                # f.write(c)
                                cumulative_c += c
                            else:
                                f.write(coloured_string(cumulative_c)+"{\color{red}?}")
                                cumulative_c = ""
                        plt.plot([pts[0],pts[1]],[pts[2],pts[3]],linewidth=0.5,color="red")

                        f.write(coloured_string(cumulative_c))
                        f.write("\\newline\n")

                    t_ = project.__sort_annotations__(121,[subject_id])[1]
                    # print individual_pts
                    for ii,(user_id,transcription,tool) in enumerate(t_["T2"]["text"][subject_id]):
                        if transcription is None:
                            continue
                        coords = list(transcription[:-1])
                        # print coords
                        if not coords in individual_pts:
                            plt.plot([coords[0],coords[1]],[coords[2],coords[3]],linewidth=0.5,color="blue")
                    # assert False

                    plt.savefig("/tmp/"+str(subject_id)+".pdf",bbox_inches='tight', pad_inches=0,dpi = 500)
                    plt.close()

                    f.write("\\newline \\newline Number of transcriptions per line: " + str(num_users) + "\n")
                    f.write("\\newpage\n")

                    continue

                    # now repeat for individual lines
                    for y,l in line_items:
                        f.write("\\noindent ")
                        cumulative_c = ""
                        for c in l:
                            if c == "&":
                                f.write(coloured_string(cumulative_c)+"\&")
                                cumulative_c = ""
                            elif ord(c) not in [24,27]:
                                # f.write(c)
                                cumulative_c += c
                            else:
                                f.write(coloured_string(cumulative_c)+"{\color{red}?}")
                                cumulative_c = ""

                        f.write(coloured_string(cumulative_c))

                        f.write("\\newline\n--- \\newline\n")

                        for i_l in individual_lines[y]:
                            # if "with" in i_l:
                            #     print i_l
                            #     assert False
                            f.write("\\textit{")
                            cumulative_c = ""
                            for c in i_l:

                                if c == "&":
                                    f.write(coloured_string(cumulative_c)+"\&")
                                    #f.write("\&")
                                    cumulative_c = ""
                                elif ord(c) not in [24,27]:
                                    cumulative_c += c
                                else:
                                    f.write(coloured_string(cumulative_c)+"{\color{red}-}")
                                    cumulative_c = ""
                            f.write(coloured_string(cumulative_c))
                            f.write("}")
                            f.write("\\newline\n")

                        f.write("\\newline\n")
                    f.write("\\newpage\n")


        f.write("\end{document}")

    call(["pdflatex","-output-directory=/tmp","/tmp/transcription.tex"])
